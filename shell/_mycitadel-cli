#compdef mycitadel-cli

autoload -U is-at-least

_mycitadel-cli() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'*-T+[Use Tor]: :_hosts' \
'*--tor-proxy=[Use Tor]: :_hosts' \
'-x+[ZMQ socket name/address for daemon RPC interface]: :_files' \
'--rpc-endpoint=[ZMQ socket name/address for daemon RPC interface]: :_files' \
'-c+[Path to the configuration file]: :_files' \
'--config=[Path to the configuration file]: :_files' \
'*-v[Set verbosity level]' \
'*--verbose[Set verbosity level]' \
'-h[Prints help information]' \
'--help[Prints help information]' \
'-V[Prints version information]' \
'--version[Prints version information]' \
":: :_mycitadel-cli_commands" \
"*::: :->mycitadel-cli" \
&& ret=0
    case $state in
    (mycitadel-cli)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:mycitadel-cli-command-$line[1]:"
        case $line[1] in
            (wallet)
_arguments "${_arguments_options[@]}" \
'*-v[Set verbosity level]' \
'*--verbose[Set verbosity level]' \
'-h[Prints help information]' \
'--help[Prints help information]' \
'-V[Prints version information]' \
'--version[Prints version information]' \
":: :_mycitadel-cli__wallet_commands" \
"*::: :->wallet" \
&& ret=0
case $state in
    (wallet)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:mycitadel-cli-wallet-command-$line[1]:"
        case $line[1] in
            (create)
_arguments "${_arguments_options[@]}" \
'*-v[Set verbosity level]' \
'*--verbose[Set verbosity level]' \
'-h[Prints help information]' \
'--help[Prints help information]' \
'-V[Prints version information]' \
'--version[Prints version information]' \
":: :_mycitadel-cli__wallet__create_commands" \
"*::: :->create" \
&& ret=0
case $state in
    (create)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:mycitadel-cli-wallet-create-command-$line[1]:"
        case $line[1] in
            (current)
_arguments "${_arguments_options[@]}" \
'--variants=[]' \
'*-v[Set verbosity level]' \
'*--verbose[Set verbosity level]' \
'-h[Prints help information]' \
'--help[Prints help information]' \
'-V[Prints version information]' \
'--version[Prints version information]' \
':name -- Wallet name:' \
':template -- Wallet descriptor template:' \
&& ret=0
;;
        esac
    ;;
esac
;;
(list)
_arguments "${_arguments_options[@]}" \
'*-v[Set verbosity level]' \
'*--verbose[Set verbosity level]' \
'-h[Prints help information]' \
'--help[Prints help information]' \
'-V[Prints version information]' \
'--version[Prints version information]' \
&& ret=0
;;
        esac
    ;;
esac
;;
(asset)
_arguments "${_arguments_options[@]}" \
'*-v[Set verbosity level]' \
'*--verbose[Set verbosity level]' \
'-h[Prints help information]' \
'--help[Prints help information]' \
'-V[Prints version information]' \
'--version[Prints version information]' \
":: :_mycitadel-cli__asset_commands" \
"*::: :->asset" \
&& ret=0
case $state in
    (asset)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:mycitadel-cli-asset-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
'*-v[Set verbosity level]' \
'*--verbose[Set verbosity level]' \
'-h[Prints help information]' \
'--help[Prints help information]' \
'-V[Prints version information]' \
'--version[Prints version information]' \
&& ret=0
;;
(import)
_arguments "${_arguments_options[@]}" \
'*-v[Set verbosity level]' \
'*--verbose[Set verbosity level]' \
'-h[Prints help information]' \
'--help[Prints help information]' \
'-V[Prints version information]' \
'--version[Prints version information]' \
':genesis -- Bech32-representation of the asset genesis (string starting with `genesis1....`:' \
&& ret=0
;;
        esac
    ;;
esac
;;
(help)
_arguments "${_arguments_options[@]}" \
'-h[Prints help information]' \
'--help[Prints help information]' \
'-V[Prints version information]' \
'--version[Prints version information]' \
&& ret=0
;;
        esac
    ;;
esac
}

(( $+functions[_mycitadel-cli_commands] )) ||
_mycitadel-cli_commands() {
    local commands; commands=(
        "wallet:Wallet management commands" \
"asset:Asset management commands" \
"help:Prints this message or the help of the given subcommand(s)" \
    )
    _describe -t commands 'mycitadel-cli commands' commands "$@"
}
(( $+functions[_mycitadel-cli__asset_commands] )) ||
_mycitadel-cli__asset_commands() {
    local commands; commands=(
        "list:Lists known assets" \
"import:Import asset genesis data" \
    )
    _describe -t commands 'mycitadel-cli asset commands' commands "$@"
}
(( $+functions[_mycitadel-cli__wallet__create_commands] )) ||
_mycitadel-cli__wallet__create_commands() {
    local commands; commands=(
        "current:Creates current wallet account" \
    )
    _describe -t commands 'mycitadel-cli wallet create commands' commands "$@"
}
(( $+functions[_mycitadel-cli__wallet__create__current_commands] )) ||
_mycitadel-cli__wallet__create__current_commands() {
    local commands; commands=(
        
    )
    _describe -t commands 'mycitadel-cli wallet create current commands' commands "$@"
}
(( $+functions[_mycitadel-cli__help_commands] )) ||
_mycitadel-cli__help_commands() {
    local commands; commands=(
        
    )
    _describe -t commands 'mycitadel-cli help commands' commands "$@"
}
(( $+functions[_mycitadel-cli__asset__import_commands] )) ||
_mycitadel-cli__asset__import_commands() {
    local commands; commands=(
        
    )
    _describe -t commands 'mycitadel-cli asset import commands' commands "$@"
}
(( $+functions[_mycitadel-cli__asset__list_commands] )) ||
_mycitadel-cli__asset__list_commands() {
    local commands; commands=(
        
    )
    _describe -t commands 'mycitadel-cli asset list commands' commands "$@"
}
(( $+functions[_mycitadel-cli__wallet__list_commands] )) ||
_mycitadel-cli__wallet__list_commands() {
    local commands; commands=(
        
    )
    _describe -t commands 'mycitadel-cli wallet list commands' commands "$@"
}
(( $+functions[_mycitadel-cli__wallet_commands] )) ||
_mycitadel-cli__wallet_commands() {
    local commands; commands=(
        "create:Creates wallet with a given name and descriptor parameters" \
"list:Lists existing wallets" \
    )
    _describe -t commands 'mycitadel-cli wallet commands' commands "$@"
}

_mycitadel-cli "$@"